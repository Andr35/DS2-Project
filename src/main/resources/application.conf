# Akka specific configuration
akka {

	# use SLF4J as logger
	loglevel = "DEBUG"
	loggers = ["akka.event.slf4j.Slf4jLogger"]
	logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
	log-dead-letters-during-shutdown = false
	log-dead-letters = 0

	# actors are remote
	actor {
		provider = remote
		warn-about-java-serializer-usage = false
	}

	# configure the transport for remote messages
	remote {
		enabled-transports = ["akka.remote.netty.tcp"]
		netty.tcp {
			hostname = "127.0.0.1"
			hostname = ${?HOST}
			port = 10000
			port = ${?PORT}
			bind-hostname = "0.0.0.0"
			bind-port = ${?PORT}
		}
	}

	# stop all actors on coordinated shutdown
	coordinated-shutdown.exit-jvm = on
}

# settings for each actor in the system
node {

	# the default node is the tracker
	id = 0
	id = ${?ID}
}

# settings specific for the Tracker
tracker {

	# number of nodes to use for the next experiment
	nodes = 3
	nodes = ${?NODES}

	# default duration of the experiment (default 5 minutes)
	duration = 3000
	duration = ${?DURATION}

	# time to wait between experiments (default 5 seconds)
	time-between-experiments = 5000
	time-between-experiments = ${?TIME_BETWEEN_EXPERIMENTS}

	# number of experiments to generate upon start
	number-of-experiments = 3
	number-of-experiments = ${?EXPERIMENTS}

	# number of repetitions of the same experiment
	repetitions = 2
	repetitions = ${?REPETITIONS}

	# initial random seed to use
	initial-seed = 0
	initial-seed = ${?INITIAL_SEED}

	# path where to store the report
	report-path = "/tmp/gossip-style-failure-detector"
	report-path = ${?REPORT_PATH}

	# interval of the gossips (ms)
	gossip-delta = 500

	# number of rounds of gossip after which a node should be considered failed
	# NB: the failure time is obtained as: gossip-delta * failure-rounds
	min-failure-rounds = 1
	min-failure-rounds = ${?MIN_FAILURE_ROUNDS}
	max-failure-rounds = null
	max-failure-rounds = ${?MAX_FAILURE_ROUNDS}

	# miss delta is gossip time multiplied by this number
	miss-delta-rounds = 10
	miss-delta-rounds = ${?MISS_DELTA_ROUNDS}
}
